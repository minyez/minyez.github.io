#!/usr/bin/env bash
# shellcheck disable=SC2068,SC2001

JEKYLL_HOME="$(dirname "$(dirname "$(realpath "${BASH_SOURCE[0]}")")")"
EDITOR="nvim"
SED="sed"
if [[ $OSTYPE != "${OSTYPE##darwin}" ]]; then
  SED="gsed"
fi

help_info() {
  echo "Post utility"
  echo ""
  echo "Usage: $0 [options] <cmd> <args>"
  echo ""
  echo "Commands:"
  echo "  h,help       - print help info and exit"
  echo "  l,list       - list all posts (including drafts)"
  echo "  pp <pdir>    - publish post under directory <pdir>"
  echo "  dp <pdir>    - convert post under directory <pdir> to draft"
  echo "  nd <title>   - create a new draft post after <title>"
  echo "  rp <n1> <n2> - rename post directory <n1> to <n2> (directory name only)"
  echo ""
  echo "Examples:"
}

slugize_hypen() {
  # $1: string
  lower=1
  (( $# == 2 )) && [[ "$2" == "no" ]] && lower=0
  if (( lower )); then
    msg=$(echo "$1" | awk '{print tolower($0)}')
  else
    msg="$1"
  fi
  echo "$msg" | $SED -e 's/[ :,_\\+]\+/-/g'
  # echo "${msg//[ :,-\\+]\+//_}"
}

remove_timestamp() {
  # remove timestamp in post name
  pn_parsed="$1"
  echo "$pn_parsed" | $SED 's/[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}-\(.*\)/\1/'
}

is_published() {
  # $1: post directory name
  pdn="$1"
  pn="$(remove_timestamp "$pdn")"
  published=0
  [[ "$pn" == "$pdn" ]] && published=1
  return $published
}

add_timestamp() {
  # add timestamp to postname
  pn_parsed="$1"
  # remove timestamp first
  pn="$(remove_timestamp "$pn_parsed")"
  echo "$(date +"%Y-%m-%d")-$pn"
}

list_all() {
  cd "$JEKYLL_HOME" || exit 10
  ls -1 _posts
}

publish_post() {
  _pd="$1"
  [[ -z "$_pd" ]] && echo "<pdir> is required" && exit 1
  cd "$JEKYLL_HOME" || exit 10
  cd _posts || exit 10
  if [[ ! -d "$_pd" ]]; then
    _date_pd=$(find . -maxdepth 1 -type d -name "*-*-*-$_pd" 2> /dev/null)
    _date_pd="${_date_pd##./}"
    if [[ -z "$_date_pd" ]]; then
      echo "<pdir> $_pd does not exist under _posts" && exit 1
    else
      echo "<pdir> $_pd is already published as $_date_pd" && exit 2
    fi
  fi
  draft=0
  [[ -f "$_pd/index.md" ]] && draft=1
  pn="$(remove_timestamp "$_pd")"
  [[ "$pn" == "$_pd" ]] && draft=1
  (( draft == 0 )) && echo "<pdir> $_pd is already published" && exit 2
  new_pn="$(add_timestamp "$pn")"
  $SED -i -e '/^date:/d' -e "/^title:/a date: $(date +"%Y-%m-%d %H:%M:%S %z")" "$_pd/index.md" || exit 3
  echo "publishing $_pd"
  echo "           renaming $_pd/index.md -> $_pd/$new_pn.md"
  mv "$_pd/index.md" "$_pd/$new_pn.md"
  echo "           renaming directory $_pd -> $new_pn"
  mv "$_pd" "$new_pn"
}

draft_post() {
  _pd="$1"
  [[ -z "$_pd" ]] && echo "<pdir> is required" && exit 1
  cd "$JEKYLL_HOME" || exit 10
  cd _posts || exit 10
  draft=0
  pn="$(remove_timestamp "$_pd")"
  [[ "$pn" == "$_pd" ]] && draft=1
  (( draft != 0 )) && echo "<pdir> $_pd is already a draft"
  $SED -i -e '/^date:/d' "$_pd/$_pd.md" || exit 3
  echo "drafting $_pd"
  echo "         renaming $_pd/$new_pn.md -> $_pd/index.md"
  mv "$_pd/$_pd.md" "$_pd/index.md"
  echo "         renaming directory $_pd -> $pn"
  mv "$_pd" "$pn"
}

rename_post() {
  dpn_old="$1"
  dpn_new="$2"
  if is_published "$1"; then
    echo "$1 is published, renaming not supported"
  else
    cd "$JEKYLL_HOME" || exit 10
    cd _posts || exit 10
    [[ ! -d "$dpn_old" ]] && echo "$dpn_old does not exist under _posts" && exit 1
    # remove possible timestampe in the new name
    dpn_new="$(remove_timestamp "$dpn_new")"
    echo "renaming post $dpn_old -> $dpn_new"
    mv "$dpn_old" "$dpn_new"
  fi
}

main() {
  while [ ${#} -gt 0 ]; do
    case "$1" in
      h | help ) help_info; exit 0 ;;
      l | list ) list_all;;
      pp ) shift 1; publish_post "$1";;
      dp ) shift 1; draft_post "$1";;
      rp ) shift 1; rename_post "$1" "$2"; shift 1;;
      * ) echo "Unknown option $0"; help_info; exit 1;;
    esac
    shift 1
  done
}

main $@
